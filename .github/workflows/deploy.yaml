name: Deploy to Stores
on:
  push:
    tags:
      - v*
  workflow_dispatch:

jobs:
  build-attr:
    runs-on: ubuntu-latest
    env:
      BUILD_NUM_OFFSET: 22
    outputs:
      BUILD_NUM: ${{ steps.build-attr.outputs.BUILD_NUM }}
      BUILD_NAME: ${{ steps.build-attr.outputs.BUILD_NAME }}

    steps:
      - id: build-attr
        run: |
          echo "BUILD_NUM=$(($GITHUB_RUN_NUMBER + $BUILD_NUM_OFFSET))" >> $GITHUB_OUTPUT
          echo "BUILD_NAME=`echo "$GITHUB_REF_NAME" | perl -nle "print $& while m/(?<=v)\d+\.\d+\.\d+/g"`" >> $GITHUB_OUTPUT

  deploy-app-store:
    name: Deploy to App Store
    runs-on: macos-latest
    needs:
      - build-attr
    steps:
      - uses: actions/checkout@v4

      - name: Set Xcode to 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app/Contents/Developer

      - name: Init Flutter SDK
        uses: chika3742/setup-fvm@v3

      - name: Install Fastlane
        run: bundle install

      - name: Import Secrets
        working-directory: ios
        env:
          APPLE_DIST_CERT_PW: ${{ secrets.APPLE_DIST_CERT_PW }}
        run: |
          mkdir ./secrets
          base64 -d <<< "${{ secrets.APPLE_PROVISIONING_PROFILE_BASE64 }}" > ./secrets/Release.mobileprovision
          base64 -d <<< "${{ secrets.APPLE_DIST_CERT_BASE64 }}" > ./secrets/dist.p12
          base64 -d <<< "${{ secrets.ASC_AUTH_KEY_BASE64 }}" > ./secrets/ASC_AuthKey.p8
          base64 -d <<< "${{ secrets.GOOGLE_SERVICE_INFO_PLIST_BASE64 }}" > ./Runner/GoogleService-Info.plist
          base64 -d <<< "${{ secrets.FIREBASE_OPTIONS_DART_BASE64 }}" > ../lib/firebase_options.dart
          base64 -d <<< "${{ secrets.FLUTTERFIRE_FIREBASE_JSON_BASE64 }}" > ../firebase.json
          bundle exec fastlane import_certificates

      - name: Build iOS
        run: |
          fvm flutter build ipa\
            --build-number ${{ needs.build-attr.outputs.BUILD_NUM }}\
            --build-name ${{ needs.build-attr.outputs.BUILD_NAME }}\
            --export-options-plist ios/ExportOptions.plist

      - name: Deploy to TestFlight
        working-directory: ios
        env:
          ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
        run: bundle exec fastlane upload

      - name: Delete Secrets
        if: always()
        run: rm -rf ./ios/secrets

  deploy-play-store:
    name: Deploy to Play Store
    runs-on: ubuntu-latest
    needs:
      - build-attr
    steps:
      - uses: actions/checkout@v4

      - name: Setup Homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Init Flutter SDK
        uses: chika3742/setup-fvm@v3

      - uses: actions/setup-java@v4 # for android build
        with:
          distribution: zulu
          java-version: '17'

      - uses: ruby/setup-ruby@v1 # for fastlane
        with:
          ruby-version: 3.3

      - name: Install Fastlane
        run: bundle install

      - name: Import Secrets
        working-directory: android
        run: |
          base64 -d <<< "${{ secrets.ANDROID_KEY_PROPERTIES_BASE64 }}" > ./key.properties
          base64 -d <<< "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" > ./main.keystore
          base64 -d <<< "${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY_BASE64 }}" > ./service_account_key.json
          base64 -d <<< "${{ secrets.GOOGLE_SERVICES_JSON_BASE64 }}" > ./app/google-services.json
          base64 -d <<< "${{ secrets.FIREBASE_OPTIONS_DART_BASE64 }}" > ../lib/firebase_options.dart

      - name: Build Android
        run: |
          fvm flutter build appbundle\
            --build-number ${{ needs.build-attr.outputs.BUILD_NUM }}\
            --build-name ${{ needs.build-attr.outputs.BUILD_NAME }}

      - name: Deploy to Play Store
        working-directory: android
        env:
          GOOGLE_SERVICE_ACCOUNT_KEY_PATH: ./service_account_key.json
        run: bundle exec fastlane upload

concurrency:
  group: deploy
  cancel-in-progress: true
